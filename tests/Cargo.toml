[package]
name = "integration_tests"
version = "0.3.0"
edition = "2021"
authors = ["The Dev Nolus Team <dev@nolus.io>"]
license = "Apache-2.0"

[package.metadata.cargo-each]
combinations = [
    { tags = ["ci", "net_main", "$protocol"], feature-groups = ["protocol"], always-on = ["$protocol"], include-rest = true, generics = { "$protocol" = "protocol" } }
]
feature-groups = { protocol = { members = ["neutron-astroport-usdc_axelar", "osmosis-osmosis-usdc_axelar", "osmosis-osmosis-usdc_noble"], at-least-one = true, mutually-exclusive = true } }

[features]
neutron-astroport-usdc_axelar = ["lease/neutron-astroport-usdc_axelar", "profit/neutron-astroport-usdc_axelar"]
osmosis-osmosis-usdc_axelar = ["lease/osmosis-osmosis-usdc_axelar", "profit/osmosis-osmosis-usdc_axelar"]
osmosis-osmosis-usdc_noble = ["lease/osmosis-osmosis-usdc_noble", "profit/osmosis-osmosis-usdc_noble"]

[dev-dependencies]
admin_contract = { path = "../platform/contracts/admin", features = ["contract"] }
lease = { path = "../protocol/contracts/lease", features = ["net_main", "testing"] }
leaser = { path = "../protocol/contracts/leaser", features = ["net_main", "testing"] }
lpp = { path = "../protocol/contracts/lpp", features = ["net_main", "contract", "testing"] }
oracle = { path = "../protocol/contracts/oracle", features = ["net_main", "contract", "testing"] }
profit = { path = "../protocol/contracts/profit", features = ["net_main", "contract", "testing"] }
rewards_dispatcher = { path = "../platform/contracts/dispatcher", features = [] }
timealarms = { path = "../platform/contracts/timealarms", features = ["contract", "testing"] }
treasury = { path = "../platform/contracts/treasury", features = ["contract"] }

access-control = { path = "../platform/packages/access-control" }
currencies = { path = "../protocol/packages/currencies", features = ["testing"] }
currency = { path = "../platform/packages/currency", features = ["testing"] }
dex = { path = "../protocol/packages/dex", features = ["testing"] }
finance = { path = "../platform/packages/finance", features = ["testing"] }
lpp-platform = { path = "../platform/packages/lpp", features = ["testing"]  }
marketprice = { path = "../protocol/packages/marketprice", features = ["testing"] }
platform = { path = "../platform/packages/platform", features = ["testing"] }
sdk = { path = "../platform/packages/sdk", features = ["cosmos", "neutron", "testing"] }
tree = { path = "../platform/packages/tree", features = ["testing"] }
swap = { path = "../protocol/packages/swap", features = ["testing"] }

anyhow = "1"
thiserror = "1"
serde = { version = "1", features = ["derive"] }

[profile.release]
opt-level = "s"
debug = false
strip = "symbols"
rpath = false
lto = true
debug-assertions = false
panic = "abort"
overflow-checks = true
