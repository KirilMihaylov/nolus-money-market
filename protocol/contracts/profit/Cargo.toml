[package]
name = "profit"
version = "0.6.0"
edition.workspace = true
authors.workspace = true
license.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[features]
net_dev = ["contract", "currencies/net_dev", "swap/test"]
net_test = ["contract", "currencies/net_test", "swap/test"]
net_main = ["contract", "currencies/net_main", "swap/main"]

astroport = ["contract", "currencies/astroport", "swap/astroport"]
osmosis = ["contract", "currencies/osmosis", "swap/osmosis"]
osmosis-osmosis-usdc_noble = ["contract", "currencies/osmosis-osmosis-usdc_noble", "swap/osmosis"]

contract = [
    "sdk/contract",
    "dep:access-control",
    "dep:cosmwasm-std",
    "dep:currencies",
    "dep:currency",
    "dex/impl",
    "dep:finance",
    "dep:oracle-platform",
    "dep:platform",
    "dep:timealarms",
    "dep:thiserror",
    "dep:versioning",
]
stub = ["dep:platform", "dep:thiserror"]
testing = []

[dependencies]
access-control = { workspace = true, optional = true }
currencies = { workspace = true, optional = true }
currency = { workspace = true, optional = true }
dex = { workspace = true }
finance = { workspace = true, optional = true }
oracle-platform = { workspace = true, optional = true }
platform = { workspace = true, optional = true }
sdk = { workspace = true }
swap = { workspace = true, optional = true }
timealarms = { workspace = true, optional = true, features = ["stub"] }
versioning = { workspace = true, optional = true }

# Required as a dependency by `entry_point` attribute macro
cosmwasm-std = { workspace = true, optional = true }

thiserror = { workspace = true, optional = true }
serde = { workspace = true, features = ["derive"] }

[dev-dependencies]
currencies = { workspace = true, features = ["testing"] }
currency = { workspace = true, features = ["testing"] }
dex = { workspace = true, features = ["testing"] }
finance = { workspace = true }
oracle-platform = { workspace = true, features = ["testing"] }
timealarms = { workspace = true, features = ["testing"] }
schema = { workspace = true }
swap = { workspace = true, features = ["testing"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
sdk = { workspace = true, features = ["testing"] }
