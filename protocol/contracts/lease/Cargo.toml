[package]
name = "lease"
version = "0.8.3"
edition.workspace = true
authors.workspace = true
license.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[features]
net_dev = ["dex/net_dev"]
net_test = ["dex/net_test"]
net_main = ["dex/net_main"]

astroport = ["skel", "dex/astroport", "dex/migration"]
osmosis = ["skel", "dex/osmosis", "dex/migration"]

contract = []
api = ["dep:dex"]
skel = ["api"]
testing = ["currencies/testing", "currency/testing", "finance/testing"]

[dependencies]
access-control = { workspace = true }
profit = { workspace = true, features = ["stub"] }
timealarms = { workspace = true, features = ["stub"] }

currencies = { workspace = true }
currency = { workspace = true }
dex = { workspace = true, optional = true }
finance = { workspace = true }
lpp = { workspace = true, features = ["stub"] }
lpp-platform = { workspace = true }
marketprice = { workspace = true }
oracle = { workspace = true, features = ["stub"] }
oracle-platform = { workspace = true }
platform = { workspace = true }
sdk = { workspace = true, features = ["contract"] }
versioning = { workspace = true }

# Required as a dependency by `entry_point` attribute macro
cosmwasm-std = { workspace = true }

enum_dispatch = { workspace = true }
thiserror = { workspace = true }
serde = { workspace = true, features = ["derive"] }

[dev-dependencies]
timealarms = { workspace = true, features = ["testing"] }
lpp = { workspace = true, features = ["testing"] }
profit = { workspace = true, features = ["testing"] }
oracle = { workspace = true, features = ["testing"] }
oracle-platform = { workspace = true, features = ["testing"] }
finance = { workspace = true, features = ["testing"] }
currencies = { workspace = true, features = ["testing"] }
currency = { workspace = true, features = ["testing"] }
marketprice = { workspace = true, features = ["testing"] }
platform = { workspace = true, features = ["testing"] }
schema = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
sdk = { workspace = true, features = ["testing"] }
