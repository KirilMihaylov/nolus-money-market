[package]
name = "lpp"
version = "0.5.3"
edition.workspace = true
authors.workspace = true
license.workspace = true

[package.metadata.cargo-each]
combinations = [
    { tags = ["build", "$net", "$protocol"], always-on = ["contract", "$net", "$protocol"], include-rest = false, generics = { "$net" = "net", "$protocol" = "protocol" } },
    { tags = ["build", "net_main", "neutron-astroport-usdc_noble"], always-on = ["net_main", "neutron-astroport-usdc_noble"], include-rest = false },
    { tags = ["build", "net_main", "osmosis-osmosis-statom"], always-on = ["net_main", "osmosis-osmosis-statom"], include-rest = false },
    { tags = ["ci", "$net", "$protocol"], feature-groups = ["net", "protocol", "stub-and-contract", "testing"], always-on = ["$net", "$protocol"], include-rest = false, generics = { "$net" = "net", "$protocol" = "protocol" } },
    { tags = ["ci", "net_main", "neutron-astroport-usdc_noble"], feature-groups = ["stub-and-contract", "testing"], always-on = ["net_main", "neutron-astroport-usdc_noble"], include-rest = false },
    { tags = ["ci", "net_main", "osmosis-osmosis-statom"], feature-groups = ["stub-and-contract", "testing"], always-on = ["net_main", "osmosis-osmosis-statom"], include-rest = false },
]
feature-groups = { net = { members = ["net_dev", "net_test", "net_main"], at-least-one = true, mutually-exclusive = true }, stub-and-contract = { members = ["stub", "contract"], at-least-one = false, mutually-exclusive = true }, protocol = { members = ["neutron-astroport-usdc_axelar", "osmosis-osmosis-usdc_axelar", "osmosis-osmosis-usdc_noble"], at-least-one = true, mutually-exclusive = true }, testing = { members = ["testing"], at-least-one = false, mutually-exclusive = false } }

[lib]
crate-type = ["cdylib", "rlib"]

[features]
net_dev = ["contract"]
net_test = ["contract"]
net_main = ["contract"]

neutron-astroport-usdc_axelar = ["contract"]
neutron-astroport-usdc_noble = ["contract"]
osmosis-osmosis-statom = ["contract"]
osmosis-osmosis-usdc_axelar = ["contract"]
osmosis-osmosis-usdc_noble = ["contract"]

contract = ["stub", "sdk/contract", "dep:cosmwasm-std", "dep:versioning", "dep:currencies", "dep:oracle"]
stub = ["dep:currencies"]
testing = ["currency/testing"]

[dependencies]
access-control = { workspace = true }
currencies = { workspace = true, optional = true }
currency = { workspace = true }
finance = { workspace = true }
lpp-platform = { workspace = true }
oracle = { workspace = true, optional = true, features = ["stub_price"] }
oracle-platform = { workspace = true }
# TODO remove the testing feature once the storage migration v1 -> v2 is over
platform = { workspace = true, features = ["testing"] }
sdk = { workspace = true }
versioning = { workspace = true, optional = true }

# Required as a dependency by `entry_point` attribute macro
cosmwasm-std = { workspace = true, optional = true }

thiserror = { workspace = true }
serde = { workspace = true, features = ["derive"] }

[dev-dependencies]
access-control = { workspace = true }
currencies = { workspace = true, features = ["testing"] }
finance = { workspace = true, features = ["testing"] }
platform = { workspace = true, features = ["testing"] }
schema = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
serde_json = { workspace = true }
