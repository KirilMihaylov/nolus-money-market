[package]
name = "reserve"
version = "0.1.0"
edition.workspace = true
authors.workspace = true
license.workspace = true

[package.metadata.cargo-each]
combinations = [
    { tags = ["build", "$net", "$protocol"], always-on = ["contract", "$net", "$protocol"], include-rest = false, generics = { "$net" = "net", "$protocol" = "protocol" } },
    { tags = ["ci", "$net", "$protocol"], feature-groups = ["net", "protocol", "contract-or-stub"], always-on = ["$net", "$protocol"], include-rest = true, generics = { "$net" = "net", "$protocol" = "protocol" } }
]
# TODO add "stub" when feature is added
feature-groups = { net = { members = ["net_dev", "net_test", "net_main"], at-least-one = true, mutually-exclusive = true }, protocol = { members = ["neutron-astroport-usdc_axelar", "osmosis-osmosis-usdc_axelar", "osmosis-osmosis-usdc_noble"], at-least-one = true, mutually-exclusive = true }, contract-or-stub = { members = ["contract"], at-least-one = false, mutually-exclusive = true } }

[lib]
crate-type = ["cdylib", "rlib"]

[features]
net_dev = ["contract", "currencies/net_dev"]
net_test = ["contract", "currencies/net_test"]
net_main = ["contract", "currencies/net_main"]

neutron-astroport-usdc_axelar = ["contract", "currencies/neutron-astroport-usdc_axelar"]
osmosis-osmosis-usdc_axelar = [
    "contract",
    "currencies/osmosis-osmosis-usdc_axelar",
]
osmosis-osmosis-usdc_noble = [
    "contract",
    "currencies/osmosis-osmosis-usdc_noble",
]

contract = [
    "sdk/contract",
    "dep:access-control",
    "dep:currency",
    "dep:cosmwasm-std",
    "dep:platform",
    "dep:sdk",
    "dep:versioning",
]
# stub = [
#     # "dep:platform",
#      "dep:sdk",
#      "dep:thiserror"]

[dependencies]
access-control = { workspace = true, optional = true }
currencies = { workspace = true }
currency = { workspace = true, optional = true }
finance = { workspace = true }
platform = { workspace = true, optional = true }
sdk = { workspace = true, optional = true }
versioning = { workspace = true, optional = true }

# Required as a dependency by `entry_point` attribute macro
cosmwasm-std = { workspace = true, optional = true }

thiserror = { workspace = true }
serde = { workspace = true, features = ["derive"] }

[dev-dependencies]
platform = {workspace = true, features = ["testing"]}
schema = { workspace = true }
sdk = { workspace = true, features = ["testing"] }
