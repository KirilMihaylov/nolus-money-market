[package]
name = "leaser"
version = "0.8.0"
edition.workspace = true
authors.workspace = true
license.workspace = true

[package.metadata.cargo-each]
combinations = [
    { tags = ["build", "$net", "$protocol"], always-on = ["$net", "$protocol"], include-rest = false, generics = { "$net" = "net", "$protocol" = "protocol" } },
    { tags = ["ci", "$net", "$protocol"], feature-groups = ["net", "protocol"], always-on = ["$net", "$protocol"], include-rest = true, generics = { "$net" = "net", "$protocol" = "protocol" } }
]
feature-groups = { net = { members = ["net_dev", "net_test", "net_main"], at-least-one = true, mutually-exclusive = true }, protocol = { members = ["neutron-astroport-usdc_axelar", "osmosis-osmosis-usdc_axelar", "osmosis-osmosis-usdc_noble"], at-least-one = true, mutually-exclusive = true } }

[lib]
crate-type = ["cdylib", "rlib"]

[features]
net_dev = ["currencies/net_dev"]
net_test = ["currencies/net_test"]
net_main = ["currencies/net_main"]

neutron-astroport-usdc_axelar = ["currencies/neutron-astroport-usdc_axelar"]
osmosis-osmosis-usdc_axelar = ["currencies/osmosis-osmosis-usdc_axelar"]
osmosis-osmosis-usdc_noble = ["currencies/osmosis-osmosis-usdc_noble"]

testing = ["currency/testing", "lease/testing"]

[dependencies]
lease = { workspace = true, features = ["skel"] }
lpp = { workspace = true }
oracle-platform = { workspace = true }

access-control = { workspace = true }
currencies = { workspace = true }
currency = { workspace = true }
finance = { workspace = true }
# TODO remove the testing feature once the storage migration v1 -> v2 is over
platform = { workspace = true, features = ["testing"] }
sdk = { workspace = true, features = ["contract"] }
versioning = { workspace = true }

# Required as a dependency by `entry_point` attribute macro
cosmwasm-std = { workspace = true }

thiserror = { workspace = true }
serde = { workspace = true, features = ["derive"] }

[dev-dependencies]
lease = { workspace = true, features = ["testing"] }
finance = { workspace = true, features = ["testing"] }
currency = { workspace = true, features = ["testing"] }
platform = { workspace = true, features = ["testing"] }
schema = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
sdk = { workspace = true, features = ["testing"] }
