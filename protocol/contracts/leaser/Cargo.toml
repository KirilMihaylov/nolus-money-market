[package]
name = "leaser"
version = "0.9.0"
edition.workspace = true
authors.workspace = true
license.workspace = true

[package.metadata.cargo-each]
combinations = [
    { tags = ["build", "$net", "$protocol"], always-on = ["$net", "$protocol"], include-rest = false, generics = { "$net" = "net", "$protocol" = "protocol" } },
    { tags = ["build", "net_main", "neutron-astroport-usdc_noble"], always-on = ["net_main", "neutron-astroport-usdc_noble"], include-rest = false },
    { tags = ["build", "net_main", "osmosis-osmosis-statom"], always-on = ["net_main", "osmosis-osmosis-statom"], include-rest = false },
    { tags = ["ci", "$net", "$protocol"], feature-groups = ["net", "protocol", "testing"], always-on = ["$net", "$protocol"], include-rest = false, generics = { "$net" = "net", "$protocol" = "protocol" } },
    { tags = ["ci", "net_main", "neutron-astroport-usdc_noble"], feature-groups = ["testing"], always-on = ["net_main", "neutron-astroport-usdc_noble"], include-rest = false },
    { tags = ["ci", "net_main", "osmosis-osmosis-statom"], feature-groups = ["testing"], always-on = ["net_main", "osmosis-osmosis-statom"], include-rest = false },
]
feature-groups = { net = { members = ["net_dev", "net_test", "net_main"], at-least-one = true, mutually-exclusive = true }, protocol = { members = ["neutron-astroport-usdc_axelar", "osmosis-osmosis-usdc_axelar", "osmosis-osmosis-usdc_noble"], at-least-one = true, mutually-exclusive = true }, testing = { members = ["testing"], at-least-one = false, mutually-exclusive = false } }

[lib]
crate-type = ["cdylib", "rlib"]

[features]
net_dev = []
net_test = []
net_main = []

neutron-astroport-usdc_axelar = []
neutron-astroport-usdc_noble = []
osmosis-osmosis-statom = []
osmosis-osmosis-usdc_axelar = []
osmosis-osmosis-usdc_noble = []

testing = ["currency/testing", "lease/testing"]

[dependencies]
admin_contract = { workspace = true }
lease = { workspace = true, features = ["skel"] }
lpp = { workspace = true }
oracle-platform = { workspace = true }
reserve = { workspace = true, features = ["stub"] }

access-control = { workspace = true }
currencies = { workspace = true }
currency = { workspace = true }
finance = { workspace = true }
platform = { workspace = true }
sdk = { workspace = true, features = ["contract"] }
versioning = { workspace = true }

# Required as a dependency by `entry_point` attribute macro
cosmwasm-std = { workspace = true }

thiserror = { workspace = true }
serde = { workspace = true, features = ["derive"] }

[dev-dependencies]
lease = { workspace = true, features = ["testing"] }
finance = { workspace = true, features = ["testing"] }
currency = { workspace = true, features = ["testing"] }
platform = { workspace = true, features = ["testing"] }
reserve = { workspace = true, features = ["testing"] }
schema = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
sdk = { workspace = true, features = ["testing"] }
