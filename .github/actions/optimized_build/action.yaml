name: "Build optimized contracts"
description: "Action for building optimized versions of the contracts"
author: "The Dev Nolus Team <dev@nolus.io>"

inputs:
  target_net:
    description: 'Whether to build targeting dev-net, test-net or main-net. This parameter takes one of these values: "dev", "test" and "main".'
    required: false
  target_protocol:
    description: "Indicates which protocol the build targets."
    required: false
  release_version:
    description: ""
    required: true
  working_directory:
    description: ""
    required: true

runs:
  using: "composite"
  steps:
    - id: "env"
      uses: "./.github/actions/env"
      with:
        build_wasm: "1"
        target_net: "${{ inputs.target_net }}"
        target_protocol: "${{ inputs.target_protocol }}"
    - name: "Build container image"
      shell: "sh"
      run: 'sudo docker build . -f "Containerfile" -t "wasm-optimizer" --build-arg "rust_ver=1.74"'
    - name: "Build optimized versions of contracts"
      shell: "sh"
      run: |
        mkdir "./artifacts/"

        echo "${{ inputs.release_version }}" >> "./artifacts/release_version"

        sudo docker run --rm -v "$(pwd)/platform/:/platform/" \
        -v "$(pwd)/protocol/:/protocol/" \
        -v "$(pwd)/${{ inputs.working_directory }}/:/code/" \
        -v "$(pwd)/artifacts/:/artifacts/" \
        --mount "type=volume,source=$(basename \"$(pwd) \")_cache,target=/code/target/" \
        --mount "type=volume,source=rustup_dir_cache,target=/usr/local/rustup/" \
        --mount "type=volume,source=cargo_dir_cache,target=/usr/local/cargo/" \
        --mount "type=volume,source=registry_cache,target=/usr/local/cargo/registry/" \
        --env 'features=${{ env.FEATURES }}' \
        --env 'RELEASE_VERSION=${{ inputs.release_version }}' \
        wasm-optimizer
    - name: "Check for WASM binaries larger than allowed limit"
      shell: "sh"
      run: |
        large_files="`find "./artifacts/" -size +3M`"

        if ! test "${large_files}" = "";
        then
          (
            echo "These files are larger than the allowed limit:"
            echo "${large_files}"
          ) >> "${GITHUB_STEP_SUMMARY}"

          exit 1
        fi
    - name: "Copy deployment script to artifacts directory"
      shell: "sh"
      run: 'sudo cp "./scripts/deploy-contracts-genesis.sh" "./artifacts/"'
    - name: "Archive ${{ inputs.target_net }}-net artifacts"
      uses: "actions/upload-artifact@v3"
      with:
        name: "optimized-binaries-${{ inputs.working_directory }}${{ env.dash_net_name }}${{ env.dash_protocol_name }}"
        path: "./artifacts/*"
