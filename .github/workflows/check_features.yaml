name: "Check features"

on:
  workflow_call:
    inputs:
      working_directory:
        required: true
        type: "string"
      rustflags:
        required: true
        type: "string"

env:
  CARGO_TERM_COLOR: "always"
  # Release version is set to `ci` to allow building during checking and testing
  # pipelines, which is ignored during optimized builds.
  RELEASE_VERSION: "ci"

jobs:
  check_features_debug:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4.1.1"
      - uses: "nolus-protocol/rust-ci-actions/rust_cache@main"
      - uses: "nolus-protocol/rust-ci-actions/check_features@main"
        with:
          profile: "dev"
          working_directory: "${{ inputs.working_directory }}"
          rustflags: "${{ inputs.rustflags }}"
  check_features_test_debug:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4.1.1"
      - uses: "nolus-protocol/rust-ci-actions/rust_cache@main"
      - uses: "nolus-protocol/rust-ci-actions/check_features@main"
        with:
          profile: "test"
          debug_assertions: "true"
          working_directory: "${{ inputs.working_directory }}"
          rustflags: "${{ inputs.rustflags }}"
  check_features_test_release:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4.1.1"
      - uses: "nolus-protocol/rust-ci-actions/rust_cache@main"
      - uses: "nolus-protocol/rust-ci-actions/check_features@main"
        with:
          profile: "test"
          debug_assertions: "false"
          working_directory: "${{ inputs.working_directory }}"
          rustflags: "${{ inputs.rustflags }}"
  check_features_release:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4.1.1"
      - uses: "nolus-protocol/rust-ci-actions/rust_cache@main"
      - uses: "nolus-protocol/rust-ci-actions/check_features@main"
        with:
          profile: "release"
          working_directory: "${{ inputs.working_directory }}"
          rustflags: "${{ inputs.rustflags }}"
